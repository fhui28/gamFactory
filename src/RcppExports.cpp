// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// expsmooth
List expsmooth(NumericVector y, NumericMatrix Xi, NumericVector beta, NumericVector x0, int deriv);
RcppExport SEXP _gamFactory_expsmooth(SEXP ySEXP, SEXP XiSEXP, SEXP betaSEXP, SEXP x0SEXP, SEXP derivSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< int >::type deriv(derivSEXP);
    rcpp_result_gen = Rcpp::wrap(expsmooth(y, Xi, beta, x0, deriv));
    return rcpp_result_gen;
END_RCPP
}
// mgks
List mgks(NumericMatrix y, NumericMatrix X, NumericMatrix X0, NumericVector beta, int deriv);
RcppExport SEXP _gamFactory_mgks(SEXP ySEXP, SEXP XSEXP, SEXP X0SEXP, SEXP betaSEXP, SEXP derivSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X0(X0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type deriv(derivSEXP);
    rcpp_result_gen = Rcpp::wrap(mgks(y, X, X0, beta, deriv));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gamFactory_expsmooth", (DL_FUNC) &_gamFactory_expsmooth, 5},
    {"_gamFactory_mgks", (DL_FUNC) &_gamFactory_mgks, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_gamFactory(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
