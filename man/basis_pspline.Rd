% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/basis_pspline.R
\name{basis_pspline}
\alias{basis_pspline}
\title{Get P-spline design matrix constructor}
\usage{
basis_pspline(k, m, lim, P)
}
\arguments{
\item{k}{number of knots.}

\item{m}{order of the P-spline basis and penalty. For instance \code{m = 3} creates
a 3rd degree basis with a second order penalty.}

\item{lim}{range over which the basis is created.}

\item{P}{scaling matrix. The output design matrix X0 and its derivatives (X1, X2, X3) will be post-multiplied by P.}
}
\value{
A function that take arguments \code{x} and \code{deriv} and returns a P-Spline model matrix and its first
\code{deriv} derivatives w.r.t. \code{x}.
}
\description{
Get P-spline design matrix constructor
}
\examples{
library(gamFactory)

tmpFun <- basis_pspline(k = 6, m = 3, lim = c(-1, 1), P = diag(6))

tmp <- tmpFun(x = seq(-0.9, 0.9, 0.01), deriv = 3)
par(mfrow = c(2, 2)) 
matplot(tmp$X0, type = 'l') # Design matrix
matplot(tmp$X1, type = 'l') # 1st derivative w.r.t. x 
matplot(tmp$X2, type = 'l') # 2nd derivative w.r.t. x 
matplot(tmp$X3, type = 'l') # 3rd derivative w.r.t. x

}
